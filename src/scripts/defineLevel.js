const levelNums = require('../config/numbers.json');

function defineLevel(trueAnswers, falseAnswers, addition, subtraction, multiplication, division, comparison, lang = 'EN') {
    let correct = trueAnswers;
    let incorrect = falseAnswers;

    let _addition = addition;
    let _subtraction = subtraction;
    let _multiplication = multiplication;
    let _division = division;
    let _comparison = comparison;

    if (lang === 'EN') {
        let numbers = levelNums;
        let level = 0;
        let nextLevel = 'Complete 0Ô∏è‚É£ example(s) to reach new level.';
    
        // Levels page. Now it's 30 levels
        if (correct <= 0) {    
            level = 0;
            nextLevel = `‚ùî Complete at least one example to start.`
        } else if (correct <= 10) {
            level = 1 + ' (ü§ì Beginner)';
            nextLevel = `‚ùî Complete ${numbers[11 - correct]} example(s) to reach a new level.`
        } else if (correct <= 20) {
            level = 2 + ' (ü§ì Beginner)';
            nextLevel = `‚ùî Complete ${numbers[21 - correct]} example(s) to reach a new level.`
        } else if (correct <= 30) {
            level = 3 + ' (ü§ì Beginner)';
            nextLevel = `‚ùî Complete ${numbers[31 - correct]} example(s) to reach a new level.`
        } else if (correct <= 40) {
            level = 4 + ' (ü§® Amateur)';
            nextLevel = `‚ùî Complete ${numbers[41 - correct]} example(s) to reach a new level.`
        } else if (correct <= 50) {
            level = 5 + ' (ü§® Amateur)';
            nextLevel = `‚ùî Complete ${numbers[51 - correct]} example(s) to reach a new level.`
        } else if (correct <= 60) {
            level = 6 + ' (ü§® Amateur)';
            nextLevel = `‚ùî Complete ${numbers[61 - correct]} example(s) to reach a new level.`
        } else if (correct <= 70) {
            level = 7 + ' (ü§® Amateur)';
            nextLevel = `‚ùî Complete ${numbers[71 - correct]} example(s) to reach a new level.`
        } else if (correct <= 80) {
            level = 8 + ' (üßê Bookkeeper)';
            nextLevel = `‚ùî Complete ${numbers[81 - correct]} example(s) to reach a new level.`
        } else if (correct <= 90) {
            level = 9 + ' (üßê Bookkeeper)';
            nextLevel = `‚ùî Complete ${numbers[91 - correct]} example(s) to reach a new level.`
        } else if (correct <= 100) {
            level = 10 + ' (üßê Bookkeeper)';
            nextLevel = `‚ùî Complete ${numbers[101 - correct]} example(s) to reach a new level.`
        } else if (correct <= 120) {
            level = 11 + ' (üßê Bookkeeper)';
            nextLevel = `‚ùî Complete ${numbers[121 - correct]} example(s) to reach a new level.`
        } else if (correct <= 140) {
            level = 12 + ' (üßê Bookkeeper)';
            nextLevel = `‚ùî Complete ${numbers[141 - correct]} example(s) to reach a new level.`
        } else if (correct <= 160) {
            level = 13 + ' (üßê Bookkeeper)';
            nextLevel = `‚ùî Complete ${numbers[161 - correct]} example(s) to reach a new level.`
        } else if (correct <= 180) {
            level = 14 + ' (üßê Bookkeeper)';
            nextLevel = `‚ùî Complete ${numbers[181 - correct]} example(s) to reach a new level.`
        } else if (correct <= 200) {
            level = 15 + ' (üßê Bookkeeper)';
            nextLevel = `‚ùî Complete ${numbers[201 - correct]} example(s) to reach a new level.`
        } else if (correct <= 220) {
            level = 16 + ' (ü§î Expert)';
            nextLevel = `‚ùî Complete ${numbers[221 - correct]} example(s) to reach a new level.`
        } else if (correct <= 240) {
            level = 17 + ' (ü§î Expert)';
            nextLevel = `‚ùî Complete ${numbers[241 - correct]} example(s) to reach a new level.`
        } else if (correct <= 260) {
            level = 18 + ' (ü§î Expert)';
            nextLevel = `‚ùî Complete ${numbers[261 - correct]} example(s) to reach a new level.`
        } else if (correct <= 280) {
            level = 19 + ' (ü§î Expert)';
            nextLevel = `‚ùî Complete ${numbers[281 - correct]} example(s) to reach a new level.`
        } else if (correct <= 300) {
            level = 20 + ' (ü§î Expert)';
            nextLevel = `‚ùî Complete ${numbers[301 - correct]} example(s) to reach a new level.`
        } else if (correct <= 320) {
            level = 21 + ' (üòè Veteran)';
            nextLevel = `‚ùî Complete ${numbers[321 - correct]} example(s) to reach a new level.`
        } else if (correct <= 340) {
            level = 22 + ' (üòè Veteran)';
            nextLevel = `‚ùî Complete ${numbers[341 - correct]} example(s) to reach a new level.`
        } else if (correct <= 360) {
            level = 23 + ' (üòè Veteran)';
            nextLevel = `‚ùî Complete ${numbers[361 - correct]} example(s) to reach a new level.`
        } else if (correct <= 380) {
            level = 24 + ' (ü§† Semi-Pro)';
            nextLevel = `‚ùî Complete ${numbers[381 - correct]} example(s) to reach a new level.`
        } else if (correct <= 400) {
            level = 25 + ' (ü§† Semi-Pro)';
            nextLevel = `‚ùî Complete ${numbers[401 - correct]} example(s) to reach a new level.`
        } else if (correct <= 420) {
            level = 26 + ' (üòé Professional)';
            nextLevel = `‚ùî Complete ${numbers[421 - correct]} example(s) to reach a new level.`
        } else if (correct <= 440) {
            level = 27 + ' (üòé Professional)';
            nextLevel = `‚ùî Complete ${numbers[441 - correct]} example(s) to reach a new level.`
        } else if (correct <= 460) {
            level = 28 + ' (üòé Professional)';
            nextLevel = `‚ùî Complete ${numbers[461 - correct]} example(s) to reach a new level.`
        } else if (correct <= 480) {
            level = 29 + ' (üòé Professional)';
            nextLevel = `‚ùî Complete ${numbers[481 - correct]} example(s) to reach a new level.`
        } else if (correct <= 500) {
            level = 30 + ' (üòé Professional)';
            nextLevel = `‚ùî Complete ${numbers[501 - correct]} example(s) to reach a new level.`
        } else if (correct <= 520) {
            level = 31 + ' (üë®‚Äçüè´ Teacher)';
            nextLevel = `‚ùî Complete ${numbers[521 - correct]} example(s) to reach a new level.`
        } else if (correct <= 540) {
            level = 32 + ' (üë®‚Äçüè´ Teacher)';
            nextLevel = `‚ùî Complete ${numbers[541 - correct]} example(s) to reach a new level.`
        } else if (correct <= 560) {
            level = 33 + ' (üë®‚Äçüè´ Teacher)';
            nextLevel = `‚ùî Complete ${numbers[561 - correct]} example(s) to reach a new level.`
        } else if (correct <= 580) {
            level = 34 + ' (üë®‚Äçüè´ Teacher)';
            nextLevel = `‚ùî Complete ${numbers[581 - correct]} example(s) to reach a new level.`
        } else if (correct <= 600) {
            level = 35 + ' (üë®‚Äçüè´ Teacher)';
            nextLevel = `‚ùî Complete ${numbers[601 - correct]} example(s) to reach a new level.`
        } else if (correct <= 620) {
            level = 36 + ' (üßë‚Äçüî¨ Scientist)';
            nextLevel = `‚ùî Complete ${numbers[621 - correct]} example(s) to reach a new level.`
        } else if (correct <= 640) {
            level = 37 + ' (üßë‚Äçüî¨ Scientist)';
            nextLevel = `‚ùî Complete ${numbers[641 - correct]} example(s) to reach a new level.`
        } else if (correct <= 660) {
            level = 38 + ' (üßë‚Äçüî¨ Scientist)';
            nextLevel = `‚ùî Complete ${numbers[661 - correct]} example(s) to reach a new level.`
        } else if (correct <= 680) {
            level = 39 + ' (üßë‚Äçüî¨ Scientist)';
            nextLevel = `‚ùî Complete ${numbers[681 - correct]} example(s) to reach a new level.`
        } else if (correct <= 700) {
            level = 40 + ' (üßë‚Äçüî¨ Scientist)';
            nextLevel = `‚ùî Complete ${numbers[701 - correct]} example(s) to reach the maximum level.`
        } else if (correct > 700) {
            level = 40 + ' (üéì Doctor of Science)';
            nextLevel = `‚úÖ Correct answers ‚Äî ${correct}\n‚ûï Addition ‚Äî ${_addition}\n‚ûñ Subtraction ‚Äî ${_subtraction}\n‚úñÔ∏è Multiplication ‚Äî ${_multiplication}\n‚ûó Division ‚Äî ${_division}\n‚öñÔ∏è Comparison ‚Äî ${_comparison}\n‚ùå Incorrect answers ‚Äî ${incorrect}\n\nüëç You have reached the the maximum level and now you are available to see the full statistics.`
        }

        return { level, nextLevel }
    } else if (lang === 'RU') {
        let numbers = levelNums;
        let level = 0;
        let nextLevel = '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 0Ô∏è‚É£ –ø—Ä–∏–º–µ—Ä–æ–≤ —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.';

        // Levels page. Now it's 30 levels
        if (correct <= 0) {    
            level = 0;
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.`
        } else if (correct <= 10) {
            level = 1 + ' (ü§ì –ù–∞—á–∏–Ω–∞—é—â–∏–π)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[11 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 20) {
            level = 2 + ' (ü§ì –ù–∞—á–∏–Ω–∞—é—â–∏–π)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[21 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 30) {
            level = 3 + ' (ü§ì –ù–∞—á–∏–Ω–∞—é—â–∏–π)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[31 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 40) {
            level = 4 + ' (ü§® –õ—é–±–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[41 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 50) {
            level = 5 + ' (ü§® –õ—é–±–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[51 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 60) {
            level = 6 + ' (ü§® –õ—é–±–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[61 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 70) {
            level = 7 + ' (ü§® –õ—é–±–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[71 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 80) {
            level = 8 + ' (üßê –°—á–µ—Ç–æ–≤–æ–¥)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[81 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 90) {
            level = 9 + ' (üßê –°—á–µ—Ç–æ–≤–æ–¥)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[91 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 100) {
            level = 10 + ' (üßê –°—á–µ—Ç–æ–≤–æ–¥)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[101 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 120) {
            level = 11 + ' (üßê –°—á–µ—Ç–æ–≤–æ–¥)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[121 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 140) {
            level = 12 + ' (üßê –°—á–µ—Ç–æ–≤–æ–¥)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[141 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 160) {
            level = 13 + ' (üßê –°—á–µ—Ç–æ–≤–æ–¥)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[161 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 180) {
            level = 14 + ' (üßê –°—á–µ—Ç–æ–≤–æ–¥)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[181 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 200) {
            level = 15 + ' (üßê –°—á–µ—Ç–æ–≤–æ–¥)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[201 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 220) {
            level = 16 + ' (ü§î –≠–∫—Å–ø–µ—Ä—Ç)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[221 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 240) {
            level = 17 + ' (ü§î –≠–∫—Å–ø–µ—Ä—Ç)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[241 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 260) {
            level = 18 + ' (ü§î –≠–∫—Å–ø–µ—Ä—Ç)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[261 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 280) {
            level = 19 + ' (ü§î –≠–∫—Å–ø–µ—Ä—Ç)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[281 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 300) {
            level = 20 + ' (ü§î –≠–∫—Å–ø–µ—Ä—Ç)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[301 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 320) {
            level = 21 + ' (üòè –í–µ—Ç–µ—Ä–∞–Ω)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[321 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 340) {
            level = 22 + ' (üòè –í–µ—Ç–µ—Ä–∞–Ω)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[341 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 360) {
            level = 23 + ' (üòè –í–µ—Ç–µ—Ä–∞–Ω)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[361 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 380) {
            level = 24 + ' (ü§† –ü–æ–ª—É-–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[381 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 400) {
            level = 25 + ' (ü§† –ü–æ–ª—É-–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[401 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 420) {
            level = 26 + ' (üòé –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[421 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 440) {
            level = 27 + ' (üòé –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[441 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 460) {
            level = 28 + ' (üòé –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[461 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 480) {
            level = 29 + ' (üòé –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[481 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 500) {
            level = 30 + ' (üòé –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[501 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 520) {
            level = 31 + ' (üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[521 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 540) {
            level = 32 + ' (üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[541 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 560) {
            level = 33 + ' (üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[561 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 580) {
            level = 34 + ' (üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[581 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 600) {
            level = 35 + ' (üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[601 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 620) {
            level = 36 + ' (üßë‚Äçüî¨ –£—á—ë–Ω—ã–π)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[621 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 640) {
            level = 37 + ' (üßë‚Äçüî¨ –£—á—ë–Ω—ã–π)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[641 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 660) {
            level = 38 + ' (üßë‚Äçüî¨ –£—á—ë–Ω—ã–π)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[661 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 680) {
            level = 39 + ' (üßë‚Äçüî¨ –£—á—ë–Ω—ã–π)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[681 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct <= 700) {
            level = 40 + ' (üßë‚Äçüî¨ –£—á—ë–Ω—ã–π)';
            nextLevel = `‚ùî –ó–∞–≤–µ—Ä—à–∏—Ç–µ ${numbers[701 - correct]} –ø—Ä–∏–º–µ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è.`
        } else if (correct > 700) {
            level = 40 + ' (üéì –î–æ–∫—Ç–æ—Ä –Ω–∞—É–∫)';
            nextLevel = `‚úÖ –í–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî ${correct}\n‚ûï –°–ª–æ–∂–µ–Ω–∏–µ ‚Äî ${_addition}\n‚ûñ –í—ã—á–∏—Ç–∞–Ω–∏–µ ‚Äî ${_subtraction}\n‚úñÔ∏è –£–º–Ω–æ–∂–µ–Ω–∏–µ ‚Äî ${_multiplication}\n‚ûó –î–µ–ª–µ–Ω–∏–µ ‚Äî ${_division}\n‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ ‚Äî ${_comparison}\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî ${incorrect}\n\nüëç –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏ —Ç–µ–ø–µ—Ä—å –í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ –í–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö.`
        }

        return { level, nextLevel }
    }
}

module.exports = defineLevel;