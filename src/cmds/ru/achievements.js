const config = require('../../config');
const achievementReceive = require('../../scripts/achievementReceive');
const mongo = require('mongodb');
const url = process.env.MONGO;

module.exports = () => async (ctx) => {
    mongo.connect(url, {
        useNewUrlParser: true,
        useUnifiedTopology: true
    }, (err, client) => {
        let db = client.db('randomath');
        db.collection('users').find({ "id": ctx.from.id }).toArray((err, data) => {
            let correct = data[0].true_answers;
            let incorrect = data[0].false_answers;

            let item = achievementReceive(correct, incorrect, 'RU');
            
            let achievements = 
                `${item.first} *–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º* ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –¥–∞—Ç—å –æ–¥–∏–Ω –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç.\n` +
                `${item.second} *–ú–æ–∂–µ—Ç –ø–æ–¥–µ–ª–∏–º—Å—è?* ‚Äî –¥–æ—Å—Ç–∏—á—å 5 —É—Ä–æ–≤–Ω—è –æ—Ç–∫—Ä—ã–≤ ‚úñÔ∏è *–£–º–Ω–æ–∂–µ–Ω–∏–µ* –∏ ‚ûó *–î–µ–ª–µ–Ω–∏–µ*.\n` +
                `${item.third} *–ü–æ–∑–≤–æ–ª—å—Ç–µ —Å—Ä–∞–≤–Ω–∏—Ç—å* ‚Äî –¥–æ—Å—Ç–∏—á—å 10 —É—Ä–æ–≤–Ω—è –æ—Ç–∫—Ä—ã–≤ ‚öñÔ∏è *–°—Ä–∞–≤–Ω–µ–Ω–∏–µ*.\n` +
                `${item.fourth} *–í—Å—Ç–∞—Ç—å –Ω–µ —Å —Ç–æ–π –Ω–æ–≥–∏* ‚Äî –¥–æ–ø—É—Å—Ç–∏—Ç—å 25 –æ—à–∏–±–æ–∫.\n` +
                `${item.fifth} *–≠–∫—Å–ø–µ—Ä—Ç –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ* ‚Äî –¥–∞—Ç—å 500 –≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.` +
                `${item.sixth}`;

            let displayAchievements = `üèÖ *–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è*\n\n` + achievements + '\n\n*–¢—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –±–æ–ª—å—à–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.*';

            ctx.editMessageText(
                `${displayAchievements}`, {
                reply_markup: {
                    inline_keyboard: config.help_keyboard_ru
                }, parse_mode: "markdown"
            })
            ctx.answerCbQuery();
        });    
    });
}